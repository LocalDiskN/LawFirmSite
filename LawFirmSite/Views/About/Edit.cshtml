@model LawFirmSite.Models.AboutModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Admin/Shared/_AdminLayout.cshtml";
}
<link href="~/StyleNScript/About/CreateSheet1.css" rel="stylesheet" />
<link href="~/StyleNScript/Generals/ExplanationSheet1.css" rel="stylesheet" />
<link href="~/StyleNScript/Generals/Dropdownmes.css" rel="stylesheet" />

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.9/css/fileinput.min.css" media="all" rel="stylesheet" type="text/css" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.9/js/plugins/piexif.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.9/js/plugins/sortable.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.9/js/plugins/purify.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.9/js/fileinput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.9/js/locales/LANG.js"></script>
<div class="bigContainer">
    <div class="headitem" id="breadCrumbs">

    </div>
    <hr class="hedlineHr" />
    <input type="file" id="input-file-1" name="imgfile" accept="image/*" />


    <div class="accordion" id="accordionExample">
        <div class="card">
            <div class="card-header" id="headingOne">
                <h5 class="mb-0">
                    <button id="About" class="linkCss btn btn-link collapsed namemebyinner" type="button" data-toggle="collapse" data-target="#collapse-1" aria-expanded="true" aria-controls="collapse-1">AvailableImages</button>
                </h5>
            </div>

            <div id="collapse-1" class="collapse show" aria-labelledby="headingOne" data-parent="#accordionExample">
                <div id="availableImgDiv" class="card-body">

                </div>
            </div>
        </div>
    </div>

    <div style="position:relative; margin-bottom:40px; margin-top:30px;">
        <label id="Alignment" class="namemebyinner" style="margin-right:20px;">Alignment</label>
        <a id="Left" class="namemebyinner hoverme mr-2">Left</a>
        <a id="Center" class="namemebyinner hoverme mr-2">Center</a>
        <a id="Right" class="namemebyinner hoverme mr-2">Right</a>
    </div>
    <div id="resultHead" class="bigContainer">
        <label id="Title" class="namemebyinner">Title</label>

    </div>

    <div id="resultDiv" class="bigContainer">

    </div>
    <div id="resultDiv2" class="bigContainer">
        <label id="Content" class="namemebyinner">Content</label>

    </div>

    <a id="Edit" class="namemebyinner buttonLink bluebuttonLinkhollow hoverme" style="font-size:24px; margin-left:45%; text-align:center;">Edit</a>
    <label id="alignmentme" style="opacity:0;"></label>
</div>
<script src="~/StyleNScript/Generals/PutLinksScript.js"></script>
<script src="~/StyleNScript/Generals/ExplanationScript.js"></script>
<script src="~/StyleNScript/Generals/HTMLEditorScript.js"></script>
<script src="~/StyleNScript/Generals/AdminScript.js"></script>
<script>
    var crumbstr = @Html.Raw(Json.Encode(ViewBag.LayoutModel.languages));

    for (var i = 0; i < crumbstr.length; i++) {
        if (crumbstr[i].Content !== "") {
            crumbstr = crumbstr[i];
            if (window.location.href.indexOf("Admin") === -1) {
                putCrumbs(document.getElementById("breadCrumbs"), [{ page: getValueFromDic(crumbstr.Content, "Home"), link: "/Home/" }, { page: getValueFromDic(crumbstr.Content, "Admin"), link: "/Admin/" }, { page: getValueFromDic(crumbstr.Content, "Edit"), link: "#"}]);
            }
            break;
        }
    }
    var modelthis = @Html.Raw(Json.Encode(Model));
    document.getElementById("alignmentme").innerHTML = modelthis.Align;
    
    console.log(modelthis.idme);
    document.getElementById("Edit").onmousedown = function () {
        var editmodel = { lang: crumbstr.Abbreviation, idme: modelthis.idme, Align: document.getElementById("alignmentme").innerHTML, ImgUrl: getRelativeImgUrl(document.getElementById("imlabdiv0-img").src), Title: document.getElementById("imlabdiv0-head").innerHTML, Content: document.getElementById("imlabdiv0-label").innerHTML };

        asyncEdit("/About/Edit/", editmodel);
    }
    var deletelinks = [
        { inner: '<i class="fas fa-trash-alt"></i>', class: "buttonLink redbuttonLinkhollow", address: "", hmessage: { message: getValueFromDic(crumbstr.Content, "Delete"), class: "buttonLink redbuttonLinkhollow", onmousedown: "" } }
    ]
    var imgdividitr = 0;
    $("#input-file-1").fileinput({
        uploadUrl: "/About/UploadImage/",
        allowedFileExtensions: ["jpg", "png"],
        maxImageWidth: 400,
        maxFileCount: 1,
        uploadAsync: true,
        resizeImage: true,
        msgCancelled: getValueFromDic(crumbstr.Content, "UploadCancelled"),
        msgFileNotFound: "{name}: " + getValueFromDic(crumbstr.Content, "FileNotFound"),
        msgFileNotReadable: "{name}: " + getValueFromDic(crumbstr.Content, "FileNotReadable"),
        msgFilePreviewAborted: getValueFromDic(crumbstr.Content, "PreviewAbortedFor") + " {name}",
        msgFilePreviewError: getValueFromDic(crumbstr.Content, "ErrorReadingFile") + " {name}",
        msgFileSecured: getValueFromDic(crumbstr.Content, "ErrorReadingSecureFile") + " {name}",
        msgFoldersNotAllowed: getValueFromDic(crumbstr.Content, "DragNDropOnly") + ". {n} " + getValueFromDic(crumbstr.Content, "Folder") + getValueFromDic(crumbstr.Content, "Skipped"),
        msgInvalidFileExtension: getValueFromDic(crumbstr.Content, "InvalidFileExtension") + ". " + getValueFromDic(crumbstr.Content, "Only") + " {extensions} " + getValueFromDic(crumbstr.Content, "Supported"),
        msgInvalidFileType: getValueFromDic(crumbstr.Content, "InvalidFileType") + ". " + getValueFromDic(crumbstr.Content, "Only") + " {types} " + getValueFromDic(crumbstr.Content, "Supported"),
        msgFilesTooLess: getValueFromDic(crumbstr.Content, "TooLessFiles") + ".",
        msgFilesTooMany: getValueFromDic(crumbstr.Content, "TooManyFiles") + ".",
        msgImageHeightLarge: getValueFromDic(crumbstr.Content, "HieghtTooLong") + ".",
        msgImageHeightSmall: getValueFromDic(crumbstr.Content, "HieghtTooShort") + ".",
        msgImageWidthLarge: getValueFromDic(crumbstr.Content, "WidthTooLong") + ".",
        msgImageWidthSmall: getValueFromDic(crumbstr.Content, "WidthTooShort") + ".",
        msgLoading: getValueFromDic(crumbstr.Content, "LoadingFile") + " {name}",
        msgNo: getValueFromDic(crumbstr.Content, "No"),
        msgProgress: getValueFromDic(crumbstr.Content, "LoadingFile") + " {name}." + "{percent}%" + getValueFromDic(crumbstr.Content, "Completed"),
        msgSelected: getValueFromDic(crumbstr.Content, "FilesSelected") + ": {n}",
        msgSizeTooLarge: getValueFromDic(crumbstr.Content, "FileSizeTooLarge") + ". " + getValueFromDic(crumbstr.Content, "AllowedUploadSize") + ": {maxSize} KB",
        msgUploadAborted: getValueFromDic(crumbstr.Content, "UploadAborted"),
        msgValidationError: getValueFromDic(crumbstr.Content, "FileUploadError"),
        msgZoomModalHeading: getValueFromDic(crumbstr.Content, "DetailedPreview"),
        msgZoomTitle: getValueFromDic(crumbstr.Content, "ViewDetails"),
        dropZoneTitle: getValueFromDic(crumbstr.Content, "DragNDrop"),
        removeTitle: getValueFromDic(crumbstr.Content, "Clear"),
        uploadTitle: getValueFromDic(crumbstr.Content, "Upload"),
        msgPlaceholder: getValueFromDic(crumbstr.Content, "SelectFile") + "...",
        uploadLabel: getValueFromDic(crumbstr.Content, "Upload"),
        browseLabel: getValueFromDic(crumbstr.Content, "Browse") + "...",
        removeLabel: getValueFromDic(crumbstr.Content, "Remove")
    }).on('fileuploaded', function (event, data, msg) {
        imgdividitr++;
        var imgdiv = document.createElement("div");
        imgdiv.className = "AnsDiv";
        imgdiv.id = "stckimgdiv-" + imgdividitr;

        var stockimg = document.createElement("img");
        stockimg.className = "AvailableImge";
        var srcme = document.createAttribute("src");
        srcme.value = "/Images/PracticeNAbout/" + data.response.filename;
        stockimg.setAttributeNode(srcme);
        stockimg.id = "stockmebaby-" + imgdividitr;
        imgdiv.appendChild(stockimg);

        imgdiv.setAttribute("onmousedown", "gemy(this)");

        avimgdiv.appendChild(imgdiv);

        deletelinks[0].onmousedown = "asyncDelete('/About/DeleteImage/',  { NameOrid: '" + data.response.filename + "', LangAbr: '" + crumbstr.Abbreviation + "'} , 'stckimgdiv-" + imgdividitr + "')";
        putlinkss(imgdiv, 10 + imgdividitr, deletelinks, "right", "0px", "0px");
        putMessage({ success: getValueFromDic(crumbstr.Content, "FileUploaded") }, 2000);
        });

    nameWinner(crumbstr.Content);
    namebuttonsWValues(crumbstr.Content);
    var expdivs = putExplan(document.getElementById("resultDiv"), [{ Align: modelthis.Align, ImgUrl: modelthis.ImgUrl, Title: modelthis.Title, Content: modelthis.Content }]);

    function gemy(elemid) {
        document.getElementById("imlabdiv0-img").src = elemid.childNodes[0].src;
        for (var i = 0; i < expdivs.length; i++) {
            setHeighttoElems(expdivs[i], [document.getElementById(expdivs[i].id + "-label"), document.getElementById(expdivs[i].id + "-img")]);
        }
    };
    var avimgdiv = document.getElementById("availableImgDiv");
    var imgnames = @Html.Raw(Json.Encode(ViewBag.ImagesAvailable));

    for (imgdividitr = 0; imgdividitr < imgnames.length; imgdividitr++) {
        var imgdiv = document.createElement("div");
        imgdiv.className = "AnsDiv";
        imgdiv.id = "stckimgdiv-" + imgdividitr;

        var stockimg = document.createElement("img");
        stockimg.className = "AvailableImge";
        var srcme = document.createAttribute("src");
        srcme.value = "/Images/PracticeNAbout/" + imgnames[imgdividitr];
        stockimg.setAttributeNode(srcme);
        stockimg.id = "stockmebaby-" + imgdividitr;
        imgdiv.appendChild(stockimg);

        imgdiv.setAttribute("onmousedown", "gemy(this)");

        avimgdiv.appendChild(imgdiv);

        deletelinks[0].onmousedown = "asyncDelete('/About/DeleteImage/',  { NameOrid: '" + imgnames[imgdividitr] + "', LangAbr: '" + crumbstr.Abbreviation + "'} , 'stckimgdiv-" + imgdividitr + "')";
        putlinkss(imgdiv, 10 + imgdividitr, deletelinks, "right", "0px", "0px");
    }

    putHTMLEditor(document.getElementById("resultDiv2"), 789, { x: "100%", y: "500px", ymax: "500px", ymin: "500px"  }, [document.getElementById("imlabdiv0-label")], ["all"], modelthis.Content);
    putHTMLEditor(document.getElementById("resultHead"), 889, { x: "100%", y: "30px", ymax: "30px", ymin: "30px" }, [document.getElementById("imlabdiv0-head")], ["all"], modelthis.Title);

    document.getElementById("Alignment").innerHTML = getValueFromDic(crumbstr.Content, "Alignment") + ":";

    {
        var leftAB = document.getElementById("Left");
        var centerAB = document.getElementById("Center");
        var rightAB = document.getElementById("Right");

        if (modelthis.Align === "left") {
            leftAB.style.color = "rgb(176, 75, 75)";
        }
        else if (modelthis.Align === "center") {
            centerAB.style.color = "rgb(176, 75, 75)";
        }
        else {
            rightAB.style.color = "rgb(176, 75, 75)";
        }

        leftAB.addEventListener("mousedown", function () {
            setExplanAlign("imlabdiv0", "left");
            document.getElementById("alignmentme").innerHTML = "left";
            leftAB.style.color = "rgb(176, 75, 75)";
            centerAB.style.color = "black";
            rightAB.style.color = "black";
        });
        centerAB.addEventListener("mousedown", function () {
            setExplanAlign("imlabdiv0", "center");
            document.getElementById("alignmentme").innerHTML = "center";
            centerAB.style.color = "rgb(176, 75, 75)";
            leftAB.style.color = "black";
            rightAB.style.color = "black";
        });
        rightAB.addEventListener("mousedown", function () {
            setExplanAlign("imlabdiv0", "right");
            document.getElementById("alignmentme").innerHTML = "right";
            rightAB.style.color = "rgb(176, 75, 75)";
            leftAB.style.color = "black";
            centerAB.style.color = "black";
        });
    }


    window.addEventListener("load", function () {
        for (var i = 0; i < expdivs.length; i++) {
            setHeighttoElems(expdivs[i], [document.getElementById(expdivs[i].id + "-label"), document.getElementById(expdivs[i].id + "-img")]);
        }
    });

    window.addEventListener("resize", function () {
        for (var i = 0; i < expdivs.length; i++) {
            setHeighttoElems(expdivs[i], [document.getElementById(expdivs[i].id + "-label"), document.getElementById(expdivs[i].id + "-img")]);
        }
    });
    document.getElementById("htmleditarea-789").onkeypress = function (event) {
        if (event.which === 13) {
            for (var i = 0; i < expdivs.length; i++) {
                setHeighttoElems(expdivs[i], [document.getElementById(expdivs[i].id + "-label"), document.getElementById(expdivs[i].id + "-img")]);
            }
        }
    };

</script>